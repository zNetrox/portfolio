---

---

<div class="loader">
    <div class="background"></div>

    <div class="inner-loader">
        <div class="counter">
            <p>0</p>
            <p>%</p>
        </div>
    </div>
    
</div>

<style>

    body {
        overflow: hidden;
    }

    .loader {
        position: fixed;
        top: 0;
        width: 100vw;
        height: 100vh;
        color: rgb(var(--white));
        z-index: 9999;
        user-select: none;
    }

    .background {
        width: 100%;
        height: 100%;
        background: rgb(var(--black));
        z-index: -1;

        transition: .5s var(--bezier);
    }

    .inner-loader {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
    }

    .counter {
        position: absolute;
        display: flex;
        bottom: 15vh;
        right: 15vh;
        color: rgb(var(--white));
        font-size: 100px;

        transition: .3s var(--bezier);
    }

    @media (max-width: 800px) {
        .counter {
            bottom: 10vh;
            right: 10vh;
            font-size: 80px;
        }
    }

</style>

<script>
    import { gsap } from "gsap"
    import { wait } from '../js/libray.js'

    const loader = document.querySelector('.loader')
    const background = document.querySelector('.background')
    const counter = document.querySelector('.counter')
    const counterPercent = document.querySelector('.counter p:nth-child(1)')
    let valueCounter = 0

    /*
    const intervalCounter = setInterval(() => {
        valueCounter++
        counterPercent.textContent = valueCounter

        if (valueCounter === 100) {
            clearInterval(intervalCounter)

            const timelineLoader = gsap.timeline({ paused: true })

            timelineLoader.to(".counter", { opacity: 0, delay: 0.1, duration: 0.3, ease: "power4.inOut" })
                .to(".background", { scale: 0.5, duration: 0.5, ease: "power4.inOut" })
                .to(".background", { height: 0, duration: 0.5, ease: "power4.inOut" })
                .to(".loader", { display: 'none' })
                .to("body", { overflow: 'auto' })

                timelineLoader.play()
        }
    }, 20)
    */

    const playLoader = function () {
        gsap.globalTimeline.pause()

        const intervalCounter = setInterval(() => {
            valueCounter++
            counterPercent.textContent = valueCounter

            if (valueCounter === 100) {
                clearInterval(intervalCounter)

                wait(100)
                    .then(() => {
                        counter.style.opacity = 0
                        return wait(300)
                    })
                    .then(() => {
                        background.style.transform = 'scale(0.5)'
                        return wait(500)
                    })
                    .then(() => {
                        background.style.height = 0
                        gsap.globalTimeline.resume()
                        return wait(500)
                    })
                    .then(() => {
                        loader.style.display = 'none'
                        document.querySelector('body').style.overflow = 'auto'
                    })
            }
        }, 20)
    }



    let keyLoader = parseInt(localStorage.getItem('keyLoader'))

    if(isNaN(keyLoader)) {
        keyLoader = 0; // permet de mettre une valeur de base
    }

    if(keyLoader === 0) {
        playLoader()
    } else {
        loader.style.display = 'none'
    }


</script>